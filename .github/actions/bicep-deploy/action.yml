# filepath: /.github/actions/bicep-deploy/action.yml
name: 'Bicep Deployment Stack Deploy'
description: 'Runs az deployment stack deploy'

inputs:
  deployment_scope:
    description: 'Scope: resourceGroup, subscription, or managementGroup'
    required: true
  deployment_stack_name:
    description: 'Name for the Deployment Stack'
    required: true
  bicep_file_path:
    description: 'Path to the main Bicep file'
    required: true
  parameters_file_path:
    description: 'Path to the Bicep parameters file'
    required: true
  resource_group_name:
    description: 'Azure Resource Group name (required if scope is resourceGroup)'
    required: false
    default: ''
  management_group_id:
    description: 'Management Group ID (required if scope is managementGroup)'
    required: false
    default: ''
  location:
    description: 'Azure region'
    required: true
  action_on_unmanage:
    description: 'What happens to resources no longer managed by the stack'
    required: false
    default: 'detachAll'
  deny_settings_mode:
    description: 'Operations denied on stack-managed resources'
    required: false
    default: 'none'

runs:
  using: "composite"
  steps:
    - name: Run Deploy
      shell: bash
      run: |
        echo "Running Bicep Deploy using Azure Deployment Stacks..."
        
        # Determine the correct az stack command based on scope
        case "${{ inputs.deployment_scope }}" in
          resourceGroup)
            if [[ -z "${{ inputs.resource_group_name }}" ]]; then
              echo "Error: resource_group_name is required for resourceGroup scope"
              exit 1
            fi
            cmd="az stack group create"
            cmd+=" --resource-group ${{ inputs.resource_group_name }}"
            ;;
          subscription)
            cmd="az stack sub create"
            ;;
          managementGroup)
            if [[ -z "${{ inputs.management_group_id }}" ]]; then
              echo "Error: management_group_id is required for managementGroup scope"
              exit 1
            fi
            cmd="az stack mg create"
            cmd+=" --management-group-id ${{ inputs.management_group_id }}"
            ;;
          *)
            echo "Error: Unsupported deployment scope: ${{ inputs.deployment_scope }}"
            echo "Supported scopes: resourceGroup, subscription, managementGroup"
            exit 1
            ;;
        esac
        
        # Add common parameters
        cmd+=" --name ${{ inputs.deployment_stack_name }}"
        cmd+=" --template-file ${{ inputs.bicep_file_path }}"
        cmd+=" --parameters ${{ inputs.parameters_file_path }}"
        cmd+=" --location ${{ inputs.location }}"
        cmd+=" --action-on-unmanage ${{ inputs.action_on_unmanage }}"
        cmd+=" --deny-settings-mode ${{ inputs.deny_settings_mode }}"
        cmd+=" --yes" # Auto-confirm deployment
        
        echo "Executing: $cmd"
        $cmd
