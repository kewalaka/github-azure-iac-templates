name: Bicep apply template
on:
  workflow_call:
    inputs:
      runner_name:
        description: 'The name of the runner pool to run on'
        type: string
        default: 'ubuntu-latest'
      target_environment:
        description: 'The environment run the workflow against'
        type: string
      bicep_root_path:
        description: 'Relative path to root of Bicep code (usually ./iac)'
        default: './iac'
        type: string
      parameters_file_path:
        description: 'Path to bicep parameters file. Path is relative to the bicep root path.'
        type: string
      deployment_name:
        description: 'Name for the deployment'
        type: string
      deployment_scope:
        description: 'Scope of deployment: resourceGroup, subscription, or managementGroup'
        type: string
        default: 'resourceGroup'
      resource_group_name:
        description: 'Azure Resource Group name (required if scope is resourceGroup)'
        type: string
        default: ''
      management_group_id:
        description: 'Management Group ID (required if scope is managementGroup)'
        type: string
        default: ''
      location:
        description: 'Azure region for deployment'
        type: string
      azure_subscription_id:
        description: 'Deployment Subscription ID. Only required if creating a subscription as part of the deployment. Otherwise use Env vars'
        type: string

jobs:
  apply:
    name: "Bicep Apply"
    runs-on: ${{ inputs.runner_name }}
    environment: ${{ inputs.target_environment }}
    permissions:
        id-token: write
        contents: read
    env:
        ## azure resource manager vars
        ARM_CLIENT_ID: "${{ vars.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ inputs.azure_subscription_id || vars.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ vars.AZURE_TENANT_ID }}"
        ARM_USE_AZUREAD: true
        ARM_USE_OIDC: true
        BICEP_ROOT_PATH: ${{ inputs.bicep_root_path }}
        DEPLOYMENT_NAME: ${{ inputs.deployment_name || 'bicep-deployment' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          enable-AzPSSession: false

      - name: Bicep Deploy
        id: deploy
        shell: bash
        working-directory: ${{ env.BICEP_ROOT_PATH }}
        run: |
          echo "Deploying Bicep template..."
          
          # Deploy based on scope
          case "${{ inputs.deployment_scope }}" in
            resourceGroup)
              if [[ -z "${{ inputs.resource_group_name }}" ]]; then
                echo "Error: resource_group_name is required for resourceGroup scope"
                exit 1
              fi
              az deployment group create \
                --resource-group "${{ inputs.resource_group_name }}" \
                --name "${{ env.DEPLOYMENT_NAME }}" \
                --template-file main.bicep \
                $([[ -n "${{ inputs.parameters_file_path }}" ]] && echo "--parameters ${{ inputs.parameters_file_path }}" || echo "")
              ;;
            subscription)
              az deployment sub create \
                --location "${{ inputs.location }}" \
                --name "${{ env.DEPLOYMENT_NAME }}" \
                --template-file main.bicep \
                $([[ -n "${{ inputs.parameters_file_path }}" ]] && echo "--parameters ${{ inputs.parameters_file_path }}" || echo "")
              ;;
            managementGroup)
              if [[ -z "${{ inputs.management_group_id }}" ]]; then
                echo "Error: management_group_id is required for managementGroup scope"
                exit 1
              fi
              az deployment mg create \
                --management-group-id "${{ inputs.management_group_id }}" \
                --location "${{ inputs.location }}" \
                --name "${{ env.DEPLOYMENT_NAME }}" \
                --template-file main.bicep \
                $([[ -n "${{ inputs.parameters_file_path }}" ]] && echo "--parameters ${{ inputs.parameters_file_path }}" || echo "")
              ;;
            *)
              echo "Error: Unsupported deployment scope: ${{ inputs.deployment_scope }}"
              echo "Supported scopes: resourceGroup, subscription, managementGroup"
              exit 1
              ;;
          esac
          
          echo "Bicep deployment completed successfully"