name: Bicep apply template
on:
  workflow_call:
    inputs:
      runner_name:
        description: 'The name of the runner pool to run on'
        type: string
        default: 'ubuntu-latest'
      target_environment:
        description: 'The environment run the workflow against'
        type: string
      bicep_root_path:
        description: 'Relative path to root of Bicep code (usually ./iac)'
        default: './iac'
        type: string
      parameters_file_path:
        description: 'Path to bicep parameters file. Path is relative to the bicep root path.'
        type: string
      deployment_stack_name:
        description: 'Name for the deployment stack (auto-generated if not provided)'
        type: string
        default: ''
      deployment_scope:
        description: 'Scope of deployment: resourceGroup, subscription, or managementGroup'
        type: string
        default: 'resourceGroup'
      resource_group_name:
        description: 'Azure Resource Group name (required if scope is resourceGroup)'
        type: string
        default: ''
      management_group_id:
        description: 'Management Group ID (required if scope is managementGroup)'
        type: string
        default: ''
      location:
        description: 'Azure region for deployment'
        type: string
      action_on_unmanage:
        description: 'What happens to resources no longer managed by the stack'
        type: string
        default: 'detachAll'
      deny_settings_mode:
        description: 'Operations denied on stack-managed resources'
        type: string
        default: 'none'
      azure_subscription_id:
        description: 'Deployment Subscription ID. Only required if creating a subscription as part of the deployment. Otherwise use Env vars'
        type: string

jobs:
  apply:
    name: "Bicep Apply"
    runs-on: ${{ inputs.runner_name }}
    environment: ${{ inputs.target_environment }}
    permissions:
        id-token: write
        contents: read
    env:
        ## azure resource manager vars
        ARM_CLIENT_ID: "${{ vars.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ inputs.azure_subscription_id || vars.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ vars.AZURE_TENANT_ID }}"
        ARM_USE_AZUREAD: true
        ARM_USE_OIDC: true
        BICEP_ROOT_PATH: ${{ inputs.bicep_root_path }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          enable-AzPSSession: false

      - name: Generate Stack Name
        id: stack-name
        shell: bash
        run: |
          if [[ -n "${{ inputs.deployment_stack_name }}" ]]; then
            echo "stack_name=${{ inputs.deployment_stack_name }}" >> $GITHUB_OUTPUT
          else
            # Try to infer from repository name
            repo_name="${{ github.repository }}"
            repo_name="${repo_name##*/}"  # Remove owner prefix
            repo_name="${repo_name,,}"    # Convert to lowercase
            repo_name="${repo_name//_/-}" # Replace underscores with hyphens
            
            if [[ -n "$repo_name" && "$repo_name" != "" ]]; then
              stack_name="${repo_name}-stack"
            else
              # Fallback to date/time
              stack_name="stack-$(date +%Y%m%d-%H%M%S)"
            fi
            
            echo "Generated stack name: $stack_name"
            echo "stack_name=$stack_name" >> $GITHUB_OUTPUT
          fi

      - name: Bicep Deploy
        uses: ./.github/actions/bicep-deploy
        with:
          deployment_scope: ${{ inputs.deployment_scope }}
          deployment_stack_name: ${{ steps.stack-name.outputs.stack_name }}
          bicep_file_path: ${{ env.BICEP_ROOT_PATH }}/main.bicep
          parameters_file_path: ${{ env.BICEP_ROOT_PATH }}/${{ inputs.parameters_file_path }}
          resource_group_name: ${{ inputs.resource_group_name }}
          management_group_id: ${{ inputs.management_group_id }}
          location: ${{ inputs.location }}
          action_on_unmanage: ${{ inputs.action_on_unmanage }}
          deny_settings_mode: ${{ inputs.deny_settings_mode }}