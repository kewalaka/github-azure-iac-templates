name: Terraform apply template
on:
  workflow_call:
    inputs:
      # required inputs
      target_environment:
        description: 'The environment run the workflow against'
        type: string

      # optional inputs
      azure_subscription_id:
        description: 'Deployment Subscription ID. Only required if creating a subscription as part of the deployment.  Otherwise uses environment secrets.'
        type: string
      destroy_resources:
        description: 'Run a terraform destroy instead of apply'
        type: boolean
        default: false
      root_module_folder_relative_path:
        description: 'Relative path to root of Terraform code (usually ./iac)'
        default: './iac'
        type: string
      runner_name:
        description: 'The name of the runner pool to run on'
        type: string
        default: 'ubuntu-latest'
      terraform_cli_version:
        description: 'Terraform CLI Version'
        default: 'latest'
        type: string
      tfstate_file:
        description: 'Terraform state file name'
        default: 'terraform.tfstate'        
        type: string
      unlock_resource_firewalls:
        description: 'Unlock firewall for tf state storage and any extra unlocks'
        default: false
        type: boolean

jobs:
  apply:
    name: "Terraform Apply${{ inputs.destroy_resources && ' Destroy' || '' }}"
    runs-on: ${{ inputs.runner_name }}
    environment: ${{ inputs.target_environment }}
    concurrency:
        group: tfstate-${{ inputs.target_environment }}
    permissions:
        id-token: write
        contents: read
    env:
        ## azure resource manager vars
        ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ inputs.azure_subscription_id || secrets.ARM_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
        ARM_USE_AZUREAD: true
        ARM_USE_OIDC: true
        ## backend vars
        TF_STATE_SUBSCRIPTION_ID: ${{ secrets.TF_STATE_SUBSCRIPTION_ID != '' && secrets.TF_STATE_SUBSCRIPTION_ID || ( secrets.ARM_SUBSCRIPTION_ID != '' && secrets.ARM_SUBSCRIPTION_ID || inputs.azure_subscription_id )}}
        TF_STATE_RESOURCE_GROUP_NAME: ${{ secrets.TF_STATE_RESOURCE_GROUP_NAME }}
        TF_STATE_STORAGE_ACCOUNT_NAME: ${{ secrets.TF_STATE_STORAGE_ACCOUNT_NAME }}
        TF_STATE_STORAGE_CONTAINER_NAME: ${{ secrets.TF_STATE_STORAGE_CONTAINER_NAME || 'tfstate' }}
        TF_STATE_STORAGE_FILE: ${{ inputs.tfstate_file ||'terraform.tfstate' }}
        # the artifact storage account is used as a more secure way to store the terraform plan artifact
        ARTIFACT_STORAGE_CONTAINER_NAME:  ${{ secrets.ARTIFACT_STORAGE_CONTAINER_NAME || 'tfartifact' }}

        # allows for dynamic unlocking of firewalls.
        EXTRA_FIREWALL_UNLOCKS: ${{ vars.EXTRA_FIREWALL_UNLOCKS }}
        # provide additional terraform variables via TF_VAR_ environment variables
        EXTRA_TF_VARS: ${{ vars.EXTRA_TF_VARS }}

    steps:
      - name: Unlock Resource Firewalls
        if: ${{ inputs.unlock_resource_firewalls }}
        uses: kewalaka/github-azure-iac-templates/.github/actions/azure-unlock-firewall@feat/terraform-updates
        with:
          OPERATION: "Allow"
          TF_STATE_SUBSCRIPTION_ID: ${{ env.TF_STATE_SUBSCRIPTION_ID  }}
          TF_STATE_RESOURCE_GROUP_NAME: ${{ env.TF_STATE_RESOURCE_GROUP_NAME }}
          TF_STATE_STORAGE_ACCOUNT_NAME: ${{ env.TF_STATE_STORAGE_ACCOUNT_NAME }}
          EXTRA_FIREWALL_UNLOCKS: "${{ env.EXTRA_FIREWALL_UNLOCKS }}"

      - name: Download Terraform Artifact
        id: download-artifact-action
        uses: azure/cli@v2
        with:
          inlineScript: |
            # todo consider az account set --subscription ${{ env.TF_STATE_SUBSCRIPTION_ID }} 
            az storage blob download \
              --auth-mode login \
              --account-name ${{ env.TF_STATE_STORAGE_ACCOUNT_NAME }} \
              --container-name "${{ env.ARTIFACT_STORAGE_CONTAINER_NAME }}" \
              --file "./${{ github.run_id }}.tar.gz" \
              --name "${{ github.run_id }}.tar.gz"
            tar -xzf "./${{ github.run_id }}.tar.gz" -C ./
            ls -l ./

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
            terraform_wrapper: false
            terraform_version: ${{ inputs.terraform_cli_version }}

      - name: Terraform Init
        id: init
        uses: kewalaka/github-azure-iac-templates/.github/actions/terraforminit@feat/terraform-updates
        with:
          root_module_folder_relative_path: ${{ inputs.root_module_folder_relative_path }}

      - name: Terraform Apply${{ inputs.destroy_resources && ' Destroy' || '' }}
        id: apply
        shell: bash
        working-directory: ${{ inputs.root_module_folder_relative_path }}
        run: |
          echo "Destroy flag set: ${{ inputs.destroy_resources }}"
          echo " "

          terraform apply -input=false -auto-approve tfplan

      - name: Delete Terraform Artifact
        if: ${{ always() }}      
        uses: azure/cli@v2
        with:
          inlineScript: |
            az storage blob delete \
              --auth-mode login \
              --account-name ${{ env.TF_STATE_STORAGE_ACCOUNT_NAME }} \
              --container-name "${{ env.ARTIFACT_STORAGE_CONTAINER_NAME }}" \
              --name "${{ github.run_id }}.zip" \
              --delete-snapshots include
                        
      - name: Lock Resource Firewalls
        if: ${{ always() && inputs.unlock_resource_firewalls }}
        uses: kewalaka/github-azure-iac-templates/.github/actions/azure-unlock-firewall@feat/terraform-updates
        with:
          OPERATION: "Deny"
          TF_STATE_SUBSCRIPTION_ID: ${{ env.TF_STATE_SUBSCRIPTION_ID  }}
          TF_STATE_RESOURCE_GROUP_NAME: ${{ env.TF_STATE_RESOURCE_GROUP_NAME }}
          TF_STATE_STORAGE_ACCOUNT_NAME: ${{ env.TF_STATE_STORAGE_ACCOUNT_NAME }}
          EXTRA_FIREWALL_UNLOCKS: "${{ env.EXTRA_FIREWALL_UNLOCKS }}"