name: Terraform apply template
on:
  workflow_call:
    inputs:
      runner_name:
        description: 'The name of the runner pool to run on'
        type: string
        default: 'ubuntu-latest'
      target_environment:
        description: 'The environment run the workflow against'
        type: string
      terraform_root_path:
        description: 'Relative path to root of Terraform code (usually ./iac)'
        default: './iac'
        type: string
      tfstate_file:
        description: 'Terraform state file name'
        type: string
      azure_subscription_id:
        description: 'Deployment Subscription ID. Only required if creating a subscription as part of the deployment. Otherwise use Env vars'
        type: string
      requireStorageAccountFirewallAction:
        description: 'Unlock firewall for tf state storage and any extra unlocks'
        default: false
        type: boolean
      destroyResources:
        type: boolean
        default: false

jobs:
  apply:
    name: "Terraform Apply${{ inputs.destroyResources && ' Destroy' || '' }}"
    runs-on: ${{ inputs.runner_name }}
    environment: ${{ inputs.target_environment }}
    concurrency:
        group: tfstate-${{ inputs.target_environment }}
    permissions:
        id-token: write
        contents: read
    env:
        ## azure resource manager vars
        ARM_CLIENT_ID: "${{ vars.AZURE_CLIENT_ID }}"
        ARM_SUBSCRIPTION_ID: "${{ inputs.azure_subscription_id || vars.AZURE_SUBSCRIPTION_ID }}"
        ARM_TENANT_ID: "${{ vars.AZURE_TENANT_ID }}"
        ARM_USE_AZUREAD: true
        ARM_USE_OIDC: true
        ## backend vars
        TF_STATE_SUBSCRIPTION_ID: ${{ vars.TF_STATE_SUBSCRIPTION_ID != '' && vars.TF_STATE_SUBSCRIPTION_ID || ( vars.AZURE_SUBSCRIPTION_ID != '' && vars.AZURE_SUBSCRIPTION_ID || inputs.azure_subscription_id )}}
        TF_STATE_RESOURCE_GROUP: ${{ vars.TF_STATE_RESOURCE_GROUP }}
        TF_STATE_BLOB_ACCOUNT: ${{ vars.TF_STATE_BLOB_ACCOUNT }}
        TF_STATE_BLOB_CONTAINER: ${{ vars.TF_STATE_BLOB_CONTAINER || 'tfstate' }}
        TF_BLOB_FILE: ${{ inputs.tfstate_file ||'terraform.tfstate' }}
        EXTRA_FIREWALL_UNLOCKS: ${{ vars.EXTRA_FIREWALL_UNLOCKS }}
        EXTRA_TF_VARS: ${{ vars.EXTRA_TF_VARS }}
        ARTIFACT_BLOB_CONTAINER:  ${{ vars.ARTIFACT_BLOB_CONTAINER || 'tfartifact' }}

    steps:
      - name: Unlock Resource Firewalls
        if: ${{ inputs.requireStorageAccountFirewallAction }}
        uses: ./.github/actions/ipdefault
        with:
          OPERATION: "Allow"
          TF_STATE_SUBSCRIPTION_ID: ${{ env.TF_STATE_SUBSCRIPTION_ID  }}
          TF_STATE_RESOURCE_GROUP: ${{ env.TF_STATE_RESOURCE_GROUP }}
          TF_STATE_BLOB_ACCOUNT: ${{ env.TF_STATE_BLOB_ACCOUNT }}
          EXTRA_FIREWALL_UNLOCKS: "${{ env.EXTRA_FIREWALL_UNLOCKS }}"

      - name: Download Artifact
        id: download
        uses: ./.github/actions/downloadartifact
        with:
          TF_STATE_SUBSCRIPTION_ID: ${{ env.TF_STATE_SUBSCRIPTION_ID }}
          TF_STATE_BLOB_ACCOUNT: ${{ env.TF_STATE_BLOB_ACCOUNT }}
          ARTIFACT_BLOB_CONTAINER: ${{ env.ARTIFACT_BLOB_CONTAINER }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
            terraform_wrapper: false

      - name: Set Extra TF_VARS
        id: set-tf-vars
        if: ${{ env.EXTRA_TF_VARS != '' }}
        uses: ./.github/actions/additionaltfvars
        with:
          tfvar-list: ${{ env.EXTRA_TF_VARS }}

      - name: Terraform Init
        id: init
        uses: ./.github/actions/terraforminit
        with:
          terraform_root_path: ${{ inputs.terraform_root_path }}

      - name: Terraform Apply${{ inputs.destroyResources && ' Destroy' || '' }}
        id: apply
        uses: ./.github/actions/terraformapply
        with:
          terraform_root_path: ${{ inputs.terraform_root_path }}
          destroyResources: ${{ inputs.destroyResources }}

      - name: Delete Artifact
        id: delete
        if: ${{ always() }}
        uses: ./.github/actions/deleteartifact
        with:
          TF_STATE_SUBSCRIPTION_ID: ${{ env.TF_STATE_SUBSCRIPTION_ID }}
          TF_STATE_BLOB_ACCOUNT: ${{ env.TF_STATE_BLOB_ACCOUNT }}
          ARTIFACT_BLOB_CONTAINER: ${{ env.ARTIFACT_BLOB_CONTAINER }}

      - name: Lock Resource Firewalls
        if: ${{ always() && inputs.requireStorageAccountFirewallAction }}
        uses: ./.github/actions/ipdefault
        with:
          OPERATION: "Deny"
          TF_STATE_SUBSCRIPTION_ID: ${{ env.TF_STATE_SUBSCRIPTION_ID  }}
          TF_STATE_RESOURCE_GROUP: ${{ env.TF_STATE_RESOURCE_GROUP }}
          TF_STATE_BLOB_ACCOUNT: ${{ env.TF_STATE_BLOB_ACCOUNT }}
          EXTRA_FIREWALL_UNLOCKS: "${{ env.EXTRA_FIREWALL_UNLOCKS }}"