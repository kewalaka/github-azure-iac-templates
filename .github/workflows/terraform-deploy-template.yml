name: Terraform deploy template
on:
  workflow_call:
    inputs:
      terraform_action:
        description: 'Terraform action to run (plan, apply, destroy)'
        type: string
      environment_name_plan:
        description: 'The GitHub environment to run the plan job against.  e.g. dev-iac-plan'
        type: string
      environment_name_apply:
        description: 'The GitHub environment to run the apply job against.  e.g. dev-iac-apply'
        type: string
      tfvars_file:
        description: 'TFvars file that has environment specified settings. Paths are relative to the terraform root path (e.g. ./iac/environments/dev.tfvars)'
        type: string

      azure_subscription_id:
        description: 'Azure Subscription ID for this run (overrides env.ARM_SUBSCRIPTION_ID)'
        required: false
        type: string
        default: ''
      bypass_static_analysis_checks:
        type: boolean
        default: false
      destroy_resources:
        type: boolean
        default: false
      root_module_folder_relative_path:
        description: 'Relative path to root of Terraform code (usually ./iac)'
        default: './iac'
        type: string
      runner_name:
        description: 'The name of the runner pool to run on'
        type: string
        default: 'ubuntu-latest'
      terraform_cli_version:
        description: 'Terraform CLI Version'
        default: 'latest'
        type: string
      tf_state_storage_container_key:
        description: 'Backend Azure Storage Account Container key for Terraform state, e.g. terraform.tfstate'
        default: 'terraform.tfstate'
        type: string
      unlock_resource_firewalls:
        description: 'Unlock firewall for tf state storage and any extra unlocks'
        default: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    name: "Run terraform plan${{ inputs.destroy_resources && ' destroy' || '' }} for ${{ inputs.environment_name_plan }}"
    uses: ./.github/workflows/terraform-plan-template.yml
    with:
      runner_name: ${{ inputs.runner_name }}
      target_environment: ${{ inputs.environment_name_plan }}
      root_module_folder_relative_path: ${{ inputs.root_module_folder_relative_path }}
      tfvars_file: ${{ inputs.tfvars_file }}
      tf_state_storage_container_key: ${{ inputs.tf_state_storage_container_key }}
      unlock_resource_firewalls: ${{ inputs.unlock_resource_firewalls }}
      destroy_resources: ${{ inputs.destroy_resources }}
      bypass_static_analysis_checks: ${{ inputs.bypass_static_analysis_checks }}
      upload_artifact: ${{ contains(fromJSON('["destroy", "apply"]'), inputs.terraform_action) }}
      azure_subscription_id: ${{ inputs.azure_subscription_id }}
      terraform_cli_version: ${{ inputs.terraform_cli_version }}
    secrets: inherit

  terraform-apply:
    needs: terraform-plan
    name: "Run terraform${{ inputs.destroy_resources && ' destroy' || ' apply' }} for ${{ inputs.environment_name_apply }}"
    if: ${{ contains(fromJSON('["destroy", "apply"]'), inputs.terraform_action) }}
    uses: ./.github/workflows/terraform-apply-template.yml
    with:
      runner_name: ${{ inputs.runner_name }}
      target_environment: ${{ inputs.environment_name_apply }}
      root_module_folder_relative_path: ${{ inputs.root_module_folder_relative_path }}
      tf_state_storage_container_key: ${{ inputs.tf_state_storage_container_key }}
      unlock_resource_firewalls: ${{ inputs.unlock_resource_firewalls }}
      destroy_resources: ${{ inputs.destroy_resources }}
      azure_subscription_id: ${{ inputs.azure_subscription_id }}
      terraform_cli_version: ${{ inputs.terraform_cli_version }}
    secrets: inherit